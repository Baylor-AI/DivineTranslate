Index: bible-frontend/src/App.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState } from 'react';\r\nimport translateText from './GoogleTranslate';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\n\r\nfunction App() {\r\n  const [inputText, setInputText] = useState('');\r\n  const [targetLanguage, setTargetLanguage] = useState('es'); // Default: Spanish\r\n     const [translatedText, setTranslatedText] = useState('');\r\n\r\n  const handleTranslate = async () => {\r\n    if (inputText) {\r\n      const text = await translateText(inputText, targetLanguage);\r\n        setTranslatedText(text);\r\n        console.log(text);\r\n    }\r\n  };\r\n   return (\r\n        <div className=\"App\">\r\n\r\n            <h1 className=\"text-success\">  SIC'EM NLP </h1>\r\n            <div class=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <div className=\"form-group\">\r\n                            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\" value={inputText}\r\n        onChange={(e) => setInputText(e.target.value)}></textarea>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n\r\n                        <select className=\"form-select\" aria-label=\"Default select example\" value={targetLanguage} onChange={(e) => setTargetLanguage(e.target.value)}>\r\n                            <option selected>Select translation language</option>\r\n                            <option value=\"es\">Spanish</option>\r\n                            <option value=\"fr\">French</option>\r\n                            <option value=\"en\">English</option>\r\n                        </select>\r\n                            <a\r\n                            className=\"btn btn-primary\"\r\n                            data-bs-toggle=\"collapse\"\r\n                            href=\"#collapseExample\"\r\n                            role=\"button\"\r\n                            aria-expanded=\"false\"\r\n                            aria-controls=\"collapseExample\"\r\n                            onClick={handleTranslate}\r\n                        >\r\n                            Translate\r\n                        </a>\r\n                            </div>\r\n                    </div>\r\n                    <div className=\"col s12 m6\">\r\n\r\n                        <div className=\"form-group\">\r\n                            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\" value={translatedText}></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bible-frontend/src/App.js b/bible-frontend/src/App.js
--- a/bible-frontend/src/App.js	(revision 14d65bc86872d2b2baee68acaaf81faf0ea40c27)
+++ b/bible-frontend/src/App.js	(date 1708988492163)
@@ -2,6 +2,8 @@
 import translateText from './GoogleTranslate';
 import "bootstrap/dist/css/bootstrap.min.css";
 import "bootstrap/dist/js/bootstrap.bundle.min";
+import wordSelector from "./WordSelector";
+import WordSelector from "./WordSelector";
 
 function App() {
   const [inputText, setInputText] = useState('');
@@ -53,6 +55,7 @@
                             <textarea className="form-control" id="exampleFormControlTextarea1" rows="5" value={translatedText}></textarea>
                         </div>
                     </div>
+                    <WordSelector sentence={translatedText}/>
                 </div>
             </div>
         </div>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"82d23a8a-3dc1-4810-a466-f964618edb0a\" name=\"Changes\" comment=\"Integrated google translate for demo purposes\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/bible-frontend/src/App.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/bible-frontend/src/App.js\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2biBtKNBscBgOUr0wpr2uqDueHK\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"RivasBible\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-5a2391486177-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.13763.11\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"82d23a8a-3dc1-4810-a466-f964618edb0a\" name=\"Changes\" comment=\"\" />\r\n      <created>1706688231147</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1706688231147</updated>\r\n      <workItem from=\"1706735693678\" duration=\"347000\" />\r\n      <workItem from=\"1706736155210\" duration=\"6318000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Designed front end to mirror wireframe\">\r\n      <created>1706738701065</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706738701065</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Designed front end to mirror wireframe\">\r\n      <created>1706738760173</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706738760173</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Integrated google translate for demo purposes\">\r\n      <created>1706742308799</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706742308799</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"Designed front end to mirror wireframe\" />\r\n    <MESSAGE value=\"Integrated google translate for demo purposes\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Integrated google translate for demo purposes\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/main.py</url>\r\n          <line>8</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 14d65bc86872d2b2baee68acaaf81faf0ea40c27)
+++ b/.idea/workspace.xml	(date 1709138820356)
@@ -5,6 +5,7 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="82d23a8a-3dc1-4810-a466-f964618edb0a" name="Changes" comment="Integrated google translate for demo purposes">
+      <change afterPath="$PROJECT_DIR$/bible-frontend/src/WordSelector.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/bible-frontend/src/App.js" beforeDir="false" afterPath="$PROJECT_DIR$/bible-frontend/src/App.js" afterDir="false" />
     </list>
@@ -12,6 +13,13 @@
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="JavaScript File" />
+      </list>
+    </option>
   </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -85,6 +93,9 @@
       <updated>1706688231147</updated>
       <workItem from="1706735693678" duration="347000" />
       <workItem from="1706736155210" duration="6318000" />
+      <workItem from="1707164875548" duration="656000" />
+      <workItem from="1707691595250" duration="1213000" />
+      <workItem from="1708979009965" duration="3478000" />
     </task>
     <task id="LOCAL-00001" summary="Designed front end to mirror wireframe">
       <created>1706738701065</created>
Index: bible-frontend/src/WordSelector.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bible-frontend/src/WordSelector.js b/bible-frontend/src/WordSelector.js
new file mode 100644
--- /dev/null	(date 1708988458536)
+++ b/bible-frontend/src/WordSelector.js	(date 1708988458536)
@@ -0,0 +1,47 @@
+import React, { useState, useEffect } from 'react';
+
+const WordSelector = ({ sentence }) => {
+  const [selectedWord, setSelectedWord] = useState('');
+  const [relatedWords, setRelatedWords] = useState([]);
+
+  useEffect(() => {
+    // Fetch related words when the selected word changes
+    if (selectedWord) {
+      fetch(`YOUR_API_ENDPOINT?word=${selectedWord}`)
+        .then(response => response.json())
+        .then(data => setRelatedWords(data))
+        .catch(error => console.error('Error fetching related words:', error));
+    }
+  }, [selectedWord]);
+
+  const handleWordSelect = (word) => {
+    setSelectedWord(word);
+  };
+
+  return (
+    <div>
+      <p>Sentence: {sentence}</p>
+
+      {sentence && (
+        <div>
+          <p>Selected Word: {selectedWord}</p>
+          <p>Related Words:</p>
+          <ul>
+            {relatedWords.map((word, index) => (
+              <li key={index}>{word}</li>
+            ))}
+          </ul>
+        </div>
+      )}
+
+      {sentence && sentence.split(' ').map((word, index) => (
+        <button key={index} onClick={() => handleWordSelect(word)}>
+          {word}
+        </button>
+      ))}
+    </div>
+  );
+};
+
+export default WordSelector;
+
